/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.SQLException;
import conexion.Conexion;
import controlador.Ctrl_Categoria;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Categoria;

/**
 *
 * @author USER
 */
public class InterGestionarCategorias extends javax.swing.JInternalFrame {

    private int idCategoria;
    private final String TABLA = "tb_categoria";
    
    public InterGestionarCategorias() {
        initComponents();
        this.setSize(new Dimension(750, 425));
        this.setTitle("Gestionar Categoria");
        
        this.CargarTablaCategoria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton_refrescar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1_categorias = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_actualizar = new javax.swing.JButton();
        jButton_eliminar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_estado = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_descripcion = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        txt_filtro = new javax.swing.JTextField();
        jButton_buscar = new javax.swing.JButton();
        jLabel1_walpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Aministrar Categorias");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_refrescar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/actualizar Tabla.png"))); // NOI18N
        jButton_refrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_refrescarActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_refrescar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 10, -1, -1));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jTable1_categorias.setBackground(new java.awt.Color(255, 255, 255));
        jTable1_categorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1_categorias);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 7, 440, 240));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 510, 250));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_actualizar.setBackground(new java.awt.Color(26, 188, 156));
        jButton_actualizar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_actualizar.setForeground(new java.awt.Color(0, 0, 0));
        jButton_actualizar.setText("Actualizar");
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 7, -1, -1));

        jButton_eliminar.setBackground(new java.awt.Color(231, 76, 60));
        jButton_eliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_eliminar.setForeground(new java.awt.Color(0, 0, 0));
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.setPreferredSize(new java.awt.Dimension(97, 24));
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 36, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 120, 130, 80));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Estado");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        txt_estado.setBackground(new java.awt.Color(255, 255, 255));
        txt_estado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_estado.setForeground(new java.awt.Color(0, 0, 0));
        txt_estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_estadoActionPerformed(evt);
            }
        });
        jPanel3.add(txt_estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 170, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Descripcion");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        txt_descripcion.setBackground(new java.awt.Color(255, 255, 255));
        txt_descripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_descripcion.setForeground(new java.awt.Color(0, 0, 0));
        txt_descripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_descripcionActionPerformed(evt);
            }
        });
        jPanel3.add(txt_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 170, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 220, 190, 150));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel4.add(txt_filtro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 510, -1));

        jButton_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buscar (1).png"))); // NOI18N
        jButton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_buscarActionPerformed(evt);
            }
        });
        jPanel4.add(jButton_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, -1, -1));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 590, 50));

        jLabel1_walpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo3.jpg"))); // NOI18N
        getContentPane().add(jLabel1_walpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed
        if(!txt_estado.getText().isEmpty()){
            Categoria categoria = new Categoria();
            Ctrl_Categoria controlCategoria = new Ctrl_Categoria();
            
            categoria.setDescripcion(txt_estado.getText().trim());
            if(controlCategoria.Eliminar(idCategoria)){
                JOptionPane.showMessageDialog(null,"Categoria Eliminada");
                txt_estado.setText("");
                this.CargarTablaCategoria();
            }else{
                JOptionPane.showMessageDialog(null, "Error al Eliminar Categoria");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione una Categoria");
        }
    }//GEN-LAST:event_jButton_eliminarActionPerformed

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed
        
        if(!txt_estado.getText().isEmpty()){
            Categoria categoria = new Categoria();
            Ctrl_Categoria controlCategoria = new Ctrl_Categoria();
            
            categoria.setDescripcion(txt_descripcion.getText().trim());
            categoria.setEstado(Integer.parseInt(txt_estado.getText().trim()));
            
            if(txt_descripcion.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Ingrese una descripcion para guardar");
                txt_descripcion.setBackground(Color.red);
            }else{
                if(controlCategoria.Actualizar(categoria, idCategoria)){
                    JOptionPane.showMessageDialog(null,"Categoria Actualizada");
                    txt_descripcion.setText("");
                    txt_descripcion.setBackground(Color.white);
                    txt_estado.setText("");
                    txt_filtro.setText("");
                    this.CargarTablaCategoria();
                }else{
                    JOptionPane.showMessageDialog(null, "Error al actualizar Categoria");
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione una Categoria");
        }
    }//GEN-LAST:event_jButton_actualizarActionPerformed

    private void txt_estadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_estadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_estadoActionPerformed

    private void txt_descripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_descripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_descripcionActionPerformed

    private void jButton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_buscarActionPerformed
        // TODO add your handling code here:
        this.CargarTablaCategoria(txt_filtro.getText().trim());
    }//GEN-LAST:event_jButton_buscarActionPerformed

    private void jButton_refrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_refrescarActionPerformed
        // TODO add your handling code here:
        this.CargarTablaCategoria();
        txt_filtro.setText("");
    }//GEN-LAST:event_jButton_refrescarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JButton jButton_buscar;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JButton jButton_refrescar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel1_walpaper;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1_categorias;
    private javax.swing.JTextField txt_descripcion;
    private javax.swing.JTextField txt_estado;
    private javax.swing.JTextField txt_filtro;
    // End of variables declaration//GEN-END:variables

    /*
    metodo para mostrar todas las categorias
    */
    private void CargarTablaCategoria(){
        Connection con = (Connection) Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql="select idCategoria, descripcion, estado from "+TABLA;
        Statement st;
        
        try {
            st =(Statement) con.createStatement();
            ResultSet rs= st.executeQuery(sql);
            InterGestionarCategorias.jTable1_categorias = new JTable(model);
            InterGestionarCategorias.jScrollPane1.setViewportView(InterGestionarCategorias.jTable1_categorias);
            
            model.addColumn("idCategoria");
            model.addColumn("descripcion");
            model.addColumn("estado");
            
            while(rs.next()){
                Object fila[] = new Object[3];
                
                for(int i = 0; i<3; i++){
                    fila[i] = rs.getObject(i+1);
                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llamar la tabla categoria: "+e);
        }
        
        jTable1_categorias.addMouseListener(new MouseAdapter(){
           @Override
           public void mouseClicked(MouseEvent e){
               int fila_point =jTable1_categorias.rowAtPoint(e.getPoint());
               int columna_point = 0;
               if(fila_point > -1){
                   idCategoria = (int) model.getValueAt(fila_point, columna_point);
                   EnviarDatosCategoriaSeleccionada(idCategoria);
               }
           }  
        });
    }
    
    private void CargarTablaCategoria(String descripcion){
        Connection con = (Connection) Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql="select idCategoria, descripcion, estado from "+TABLA+" where descripcion LIKE'%"+descripcion+"%';";
        Statement st;
        
        try {
            st =(Statement) con.createStatement();
            ResultSet rs= st.executeQuery(sql);
            InterGestionarCategorias.jTable1_categorias = new JTable(model);
            InterGestionarCategorias.jScrollPane1.setViewportView(InterGestionarCategorias.jTable1_categorias);
            
            model.addColumn("idCategoria");
            model.addColumn("descripcion");
            model.addColumn("estado");
            
            while(rs.next()){
                Object fila[] = new Object[3];
                
                for(int i = 0; i<3; i++){
                    fila[i] = rs.getObject(i+1);
                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llamar la tabla categoria: "+e);
        }
        
        jTable1_categorias.addMouseListener(new MouseAdapter(){
           @Override
           public void mouseClicked(MouseEvent e){
               int fila_point =jTable1_categorias.rowAtPoint(e.getPoint());
               int columna_point = 0;
               if(fila_point > -1){
                   idCategoria = (int) model.getValueAt(fila_point, columna_point);
                   EnviarDatosCategoriaSeleccionada(idCategoria);
               }
           }  
        });
    }
    
    private void EnviarDatosCategoriaSeleccionada(int idCategoria){
        try {
            Connection con = (Connection) Conexion.conectar();
            PreparedStatement pat = (PreparedStatement) con.prepareStatement(
                    "select * from "+TABLA+" WHERE idCategoria = '"+idCategoria+"';");
            ResultSet rs = pat.executeQuery();
            
            if(rs.next()){
                txt_descripcion.setText(rs.getString("descripcion"));
                txt_estado.setText(rs.getString("estado"));
            }
            con.close();
        } catch (Exception e) {
            System.out.println("Error al seleccionar categoria: "+ e);
        }        
    }
    
}
