/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.SQLException;
import conexion.Conexion;
import controlador.Ctrl_Videojuego;
import excel.Format_Videojuego;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Videojuego;

/**
 *
 * @author USER
 */
public class InterGestionarVideojuego extends javax.swing.JInternalFrame {

    private int idVideojuego;
    int obtenerIdCategoria = 0;
    int obtenerIdPlataforma = 0;
    private final String TABLA = "tb_videojuego";
    private final String TABLACATE = "tb_categoria";
    private final String TABLAPLAT = "tb_plataforma";

    public InterGestionarVideojuego() {
        initComponents();
        this.setSize(new Dimension(1300, 600));
        this.setTitle("Gestionar Videojuego");

        this.CargarTablaVideojuego();
        this.CargarComboCategorias();
        this.CargarComboPlataforma();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Videojuego = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_eliminar = new javax.swing.JButton();
        jButton_Actualizar = new javax.swing.JButton();
        jButton_cargaMasiva = new javax.swing.JButton();
        jButton_formato = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        txt_filtro = new javax.swing.JTextField();
        jButton_buscar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox_categoria = new javax.swing.JComboBox<>();
        jComboBox_iva = new javax.swing.JComboBox<>();
        jComboBox_plataforma = new javax.swing.JComboBox<>();
        txt_nombre = new javax.swing.JTextField();
        txt_cantidad = new javax.swing.JTextField();
        txt_precio = new javax.swing.JTextField();
        txt_descripcion = new javax.swing.JTextField();
        txt_estado = new javax.swing.JTextField();
        jLabel1_walpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Aministrar Videojuegos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/actualizar Tabla.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 10, -1, -1));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jTable_Videojuego.setBackground(new java.awt.Color(255, 255, 255));
        jTable_Videojuego.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_Videojuego);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 7, 1060, 260));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 1130, 270));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_eliminar.setBackground(new java.awt.Color(231, 76, 60));
        jButton_eliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_eliminar.setForeground(new java.awt.Color(0, 0, 0));
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.setPreferredSize(new java.awt.Dimension(97, 24));
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 110, -1));

        jButton_Actualizar.setBackground(new java.awt.Color(26, 188, 156));
        jButton_Actualizar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Actualizar.setForeground(new java.awt.Color(0, 0, 0));
        jButton_Actualizar.setText("Actualizar");
        jButton_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ActualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 110, -1));

        jButton_cargaMasiva.setBackground(new java.awt.Color(41, 128, 185));
        jButton_cargaMasiva.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_cargaMasiva.setForeground(new java.awt.Color(0, 0, 0));
        jButton_cargaMasiva.setText("<html>\n<center>Cargar <center> Videojuegos\n\n</html>");
        jButton_cargaMasiva.setFocusPainted(false);
        jButton_cargaMasiva.setFocusable(false);
        jButton_cargaMasiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cargaMasivaActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_cargaMasiva, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 110, 40));

        jButton_formato.setBackground(new java.awt.Color(39, 174, 96));
        jButton_formato.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_formato.setForeground(new java.awt.Color(0, 0, 0));
        jButton_formato.setText("<html>\n<center>Descargar<center>\n<center> Formato Excel<center>\n</html>");
        jButton_formato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_formatoActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_formato, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 110, 60));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 140, 130, 270));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_filtro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_filtro.setForeground(new java.awt.Color(0, 0, 0));
        txt_filtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_filtroActionPerformed(evt);
            }
        });
        txt_filtro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_filtroKeyPressed(evt);
            }
        });
        jPanel4.add(txt_filtro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1030, 30));

        jButton_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buscar (1).png"))); // NOI18N
        jButton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_buscarActionPerformed(evt);
            }
        });
        jPanel4.add(jButton_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 10, -1, -1));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 79, 1130, 50));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nombre:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Cantidad:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 80, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Precio:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 90, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Descripcion:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 90, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Plataforma:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 10, 90, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Estado:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 40, 90, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("IVA:");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, 90, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Categoria:");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 40, 90, -1));

        jComboBox_categoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Categoria:", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(jComboBox_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 40, 230, -1));

        jComboBox_iva.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_iva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione IVA:", "No tiene IVA", "19%" }));
        jPanel3.add(jComboBox_iva, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 180, -1));

        jComboBox_plataforma.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_plataforma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Plataforma:", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(jComboBox_plataforma, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 10, 230, -1));

        txt_nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 170, -1));

        txt_cantidad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_cantidad.setEnabled(false);
        jPanel3.add(txt_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 170, -1));

        txt_precio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 170, -1));

        txt_descripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 170, -1));

        txt_estado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 40, 180, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 1270, 100));

        jLabel1_walpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo4.jpg"))); // NOI18N
        getContentPane().add(jLabel1_walpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed

        Ctrl_Videojuego controlVideojuego = new Ctrl_Videojuego();
        if (idVideojuego == 0) {
            JOptionPane.showMessageDialog(null, "Seleccione un Videojuego!");
        } else {
            if (controlVideojuego.Eliminar(idVideojuego)) {
                JOptionPane.showMessageDialog(null, "Videojuego Eliminado;");
                this.CargarTablaVideojuego();
                this.CargarComboCategorias();
                this.CargarComboPlataforma();
                this.Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al Eliminar");
            }
        }

    }//GEN-LAST:event_jButton_eliminarActionPerformed

    private void jButton_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ActualizarActionPerformed
        Videojuego videojuego = new Videojuego();
        Ctrl_Videojuego controlVideojuego = new Ctrl_Videojuego();
        String iva = "";
        String categoria = "";
        String plataforma = "";
        iva = jComboBox_iva.getSelectedItem().toString().trim();
        categoria = jComboBox_categoria.getSelectedItem().toString().trim();
        plataforma = jComboBox_plataforma.getSelectedItem().toString().trim();

        //Validacion de campos
        if (txt_nombre.getText().isEmpty() || txt_cantidad.getText().isEmpty()
                || txt_precio.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
            txt_nombre.setBackground(Color.red);
            txt_cantidad.setBackground(Color.red);
            txt_precio.setBackground(Color.red);
        } else {
            //consulta para verificar redundancia de informacion
            if (iva.equalsIgnoreCase("Seleccione IVA:")) {
                JOptionPane.showMessageDialog(null, "Seleccione IVA.");
            } else if (categoria.equalsIgnoreCase("Seleccione Categoria:")) {
                JOptionPane.showMessageDialog(null, "Seleccione Categoria.");
            } else if (plataforma.equalsIgnoreCase("Seleccione Plataforma:")) {
                JOptionPane.showMessageDialog(null, "Seleccione Plataforma");
            } else {
                try {

                    videojuego.setNombre(txt_nombre.getText().trim());
                    videojuego.setCantidad(Integer.parseInt(txt_cantidad.getText().trim()));
                    String precioTXT = "";
                    double Precio = 0.0;
                    precioTXT = txt_precio.getText().trim();
                    boolean aux = false;

                    // si el usuario ingresa , (coma) como decimal se transforma en . (punto)
                    for (int i = 0; i < precioTXT.length(); i++) {
                        if (precioTXT.charAt(i) == ',') {
                            String precioNuevo = precioTXT.replace(",", ".");
                            Precio = Double.parseDouble(precioNuevo);
                            aux = true;
                        }
                    }

                    //evaluar la condicion
                    if (aux) {
                        videojuego.setPrecio(Precio);
                    } else {
                        Precio = Double.parseDouble(precioTXT);
                        videojuego.setPrecio(Precio);
                    }

                    videojuego.setDescripcion(txt_descripcion.getText().trim());

                    //porcentage de iva
                    if (iva.equalsIgnoreCase("No tiene IVA")) {
                        videojuego.setPorcentajeIva(0);
                    } else if (iva.equalsIgnoreCase("19%")) {
                        videojuego.setPorcentajeIva(19);
                    }

                    //idCategoria - metodo para obtener el id de la categoria
                    this.IdCategoria();
                    videojuego.setIdCategoria(obtenerIdCategoria);

                    //idPlataforma - metodo para obtener el id de la plataforma
                    this.IdPlataforma();
                    videojuego.setIdPlataforma(obtenerIdPlataforma);

                    videojuego.setEstado(1);

                    if (controlVideojuego.Actualizar(videojuego, idVideojuego)) {
                        JOptionPane.showMessageDialog(null, "Videojuego Actualizado");

                        this.CargarComboCategorias();
                        this.CargarComboPlataforma();
                        this.CargarTablaVideojuego();
                        this.Limpiar();
                    } else {
                        JOptionPane.showMessageDialog(null, "Error al Actualizar el Videojuego");
                    }

                } catch (HeadlessException | NumberFormatException e) {
                    System.out.println("Error en: " + e);
                }
            }
        }

    }//GEN-LAST:event_jButton_ActualizarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // refrescar
        this.CargarTablaVideojuego();
        this.Limpiar();
        txt_filtro.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_buscarActionPerformed
        // filtrar
        this.CargarTablaVideojuego(txt_filtro.getText().trim());
    }//GEN-LAST:event_jButton_buscarActionPerformed

    private void jButton_cargaMasivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cargaMasivaActionPerformed
        try {
            // seleccionar archivo
            this.cargaMasiva();
            this.CargarTablaVideojuego();
        } catch (IOException ex) {
            Logger.getLogger(InterGestionarVideojuego.class.getName()).log(Level.SEVERE, "Se quedo en el boton", ex);
        }
    }//GEN-LAST:event_jButton_cargaMasivaActionPerformed

    private void jButton_formatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_formatoActionPerformed
        // descargar formato de excel
            Format_Videojuego format_Videojuego = new Format_Videojuego();
            format_Videojuego.crearExcel();

    }//GEN-LAST:event_jButton_formatoActionPerformed

    private void txt_filtroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_filtroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_filtroActionPerformed

    private void txt_filtroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_filtroKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == evt.VK_ENTER){
            this.CargarTablaVideojuego(txt_filtro.getText().trim());
        }
    }//GEN-LAST:event_txt_filtroKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_Actualizar;
    private javax.swing.JButton jButton_buscar;
    private javax.swing.JButton jButton_cargaMasiva;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JButton jButton_formato;
    private javax.swing.JComboBox<String> jComboBox_categoria;
    private javax.swing.JComboBox<String> jComboBox_iva;
    private javax.swing.JComboBox<String> jComboBox_plataforma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel1_walpaper;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_Videojuego;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_descripcion;
    private javax.swing.JTextField txt_estado;
    private javax.swing.JTextField txt_filtro;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_precio;
    // End of variables declaration//GEN-END:variables

    //Limpiar campos
    private void Limpiar() {
        txt_nombre.setText("");
        txt_cantidad.setText("");
        txt_precio.setText("");
        txt_descripcion.setText("");
        txt_estado.setText("");
        txt_filtro.setText("");
        jComboBox_iva.setSelectedItem("Seleccione IVA:");
        jComboBox_categoria.setSelectedItem("Seleccione Categoria:");
        jComboBox_plataforma.setSelectedItem("Seleccione Plataforma:");
    }

    /*
    metodo para cargar las categorias jComboX
     */
    private void CargarComboCategorias() {
        Connection cn = (Connection) Conexion.conectar();
        String sql = "select * from tb_categoria where estado=1";
        Statement st;

        try {

            st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_categoria.removeAllItems();
            jComboBox_categoria.addItem("Seleccione Categoria:");

            while (rs.next()) {
                jComboBox_categoria.addItem(rs.getString("descripcion"));
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar categorias:");
        }
    }

    /*
    metodo para cargar las plataforma jComboX
     */
    private void CargarComboPlataforma() {
        Connection cn = (Connection) Conexion.conectar();
        String sql = "select * from tb_plataforma where estado=1";
        Statement st;

        try {

            st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_plataforma.removeAllItems();
            jComboBox_plataforma.addItem("Seleccione Plataforma:");

            while (rs.next()) {
                jComboBox_plataforma.addItem(rs.getString("descripcion"));
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar plataforma:");
        }
    }

    /*
    metodo para mostrar todos los videojuegos
     */
    String descripcionCategoria = "";
    String descripcionPlataforma = "";
    double precio = 0.0;
    int porcentajeIva = 0;
    double IVA = 0;

    private void CargarTablaVideojuego() {
        Connection con = (Connection) Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();

        String sql = "select v.idVideojuego, v.nombre, v.cantidad, v.precio, v.descripcion, v.porcentajeIva, c.descripcion, p.descripcion, v.estado "
                + "from " + TABLA + " as v," + TABLACATE + " as c," + TABLAPLAT + " as p "
                + "where v.idCategoria = c.idCategoria and v.idPlataforma = p.idPlataforma order by idVideojuego ASC;";
        Statement st;

        try {
            st = (Statement) con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterGestionarVideojuego.jTable_Videojuego = new JTable(model);
            InterGestionarVideojuego.jScrollPane1.setViewportView(InterGestionarVideojuego.jTable_Videojuego);

            model.addColumn("N");//id
            model.addColumn("Nombre");
            model.addColumn("Cantidad");
            model.addColumn("Precio");
            model.addColumn("descripcion");
            model.addColumn("Iva");
            model.addColumn("Categoria");
            model.addColumn("Plataforma");
            model.addColumn("Estado");

            while (rs.next()) {

                precio = rs.getDouble("precio");
                porcentajeIva = rs.getInt("porcentajeIva");

                Object fila[] = new Object[9];

                for (int i = 0; i < 9; i++) {

                    if (i == 5) {
                        System.out.println("precio: " + precio + " Iva: " + porcentajeIva);
                        this.calcularIva(precio, porcentajeIva);
                        System.out.println("PRECIOIVA: " + IVA);
                        fila[i] = IVA;
                        rs.getObject(i + 1);
                    } else {
                        fila[i] = rs.getObject(i + 1);
                    }

                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llamar la tabla videojuego: " + e);
        }

        jTable_Videojuego.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_Videojuego.rowAtPoint(e.getPoint());
                int columna_point = 0;
                if (fila_point > -1) {
                    idVideojuego = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosVideojuegoSeleccionado(idVideojuego);
                }
            }
        });
    }

    //metodo para calcular precio con iva
    private double calcularIva(double precio, int iva) {
        int p_iva = iva;
        switch (p_iva) {
            case 0:
                IVA = 0.0;
                break;
            case 19:
                IVA = precio * 0.19;
                break;
            default:
                break;
        }
        if (p_iva == 0) {
            IVA = 0.0;
        } else if (p_iva == 19) {
            IVA = precio * 0.19;
        }
        //redondear decimales
        IVA = (double) Math.round(IVA * 100) / 100;
        return IVA;
    }

    private void EnviarDatosVideojuegoSeleccionado(int idVideojuego) {
        try {
            Connection con = (Connection) Conexion.conectar();
            PreparedStatement pat = (PreparedStatement) con.prepareStatement(
                    "select * from " + TABLA + " WHERE idVideojuego = '" + idVideojuego + "';");
            ResultSet rs = pat.executeQuery();

            if (rs.next()) {
                txt_nombre.setText(rs.getString("nombre"));
                txt_cantidad.setText(rs.getString("cantidad"));
                txt_precio.setText(rs.getString("precio"));
                txt_descripcion.setText(rs.getString("descripcion"));
                txt_estado.setText(rs.getString("estado"));
                int iva = rs.getInt("porcentajeIva");
                switch (iva) {
                    case 0:
                        jComboBox_iva.setSelectedItem("No tiene IVA");
                        break;
                    case 19:
                        jComboBox_iva.setSelectedItem("19%");
                        break;
                    default:
                        jComboBox_iva.setSelectedItem("Seleccione IVA:");
                        break;
                }
                int cate = rs.getInt("idCategoria");
                jComboBox_categoria.setSelectedItem(relacionarCategoria(cate));
                int platafor = rs.getInt("idPlataforma");
                jComboBox_plataforma.setSelectedItem(relacionarPlataforma(platafor));

            }
            con.close();
        } catch (Exception e) {
            System.out.println("Error al seleccionar el Videojuego: " + e);
        }
    }

    //Metodo para relacionar categorias
    private String relacionarCategoria(int idCategoria) {

        String sql = "select descripcion from tb_categoria where idCategoria= '" + idCategoria + "';";
        Statement st;

        try {
            Connection cn = (Connection) Conexion.conectar();
            st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                descripcionCategoria = rs.getString("descripcion");
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al obtener el id de la categorias:");
        }
        return descripcionCategoria;
    }

    //metodo para relacionar plataforma
    private String relacionarPlataforma(int idPlataforma) {

        String sql = "select descripcion from tb_plataforma where idPlataforma= '" + idPlataforma + "';";
        Statement st;

        try {
            Connection cn = (Connection) Conexion.conectar();
            st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                descripcionPlataforma = rs.getString("descripcion");
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar plataforma:");
        }
        return descripcionPlataforma;
    }

    private int IdCategoria() {
        String sql = "select * from tb_categoria where descripcion = '" + this.jComboBox_categoria.getSelectedItem() + "';";
        Statement st;
        try {
            Connection cn = (Connection) Conexion.conectar();
            st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerIdCategoria = rs.getInt("idCategoria");
            }
        } catch (SQLException e) {
            System.out.println("Error al obtener id Categoria");
        }
        return obtenerIdCategoria;
    }

    private int IdPlataforma() {
        String sql = "select * from tb_plataforma where descripcion = '" + this.jComboBox_plataforma.getSelectedItem() + "';";
        Statement st;
        try {
            Connection cn = (Connection) Conexion.conectar();
            st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerIdPlataforma = rs.getInt("idPlataforma");
            }
        } catch (SQLException e) {
            System.out.println("Error al obtener id Plataforma");
        }
        return obtenerIdPlataforma;
    }

    private void CargarTablaVideojuego(String nombre) {
        Connection con = (Connection) Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();

        String sql = "select v.idVideojuego, v.nombre, v.cantidad, v.precio, v.descripcion, v.porcentajeIva, c.descripcion, p.descripcion, v.estado "
                + "from " + TABLA + " as v," + TABLACATE + " as c," + TABLAPLAT + " as p "
                + "where v.idCategoria = c.idCategoria and v.idPlataforma = p.idPlataforma and nombre LIKE'" + nombre + "%' order by idVideojuego ASC;";
        Statement st;

        try {
            st = (Statement) con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterGestionarVideojuego.jTable_Videojuego = new JTable(model);
            InterGestionarVideojuego.jScrollPane1.setViewportView(InterGestionarVideojuego.jTable_Videojuego);

            model.addColumn("N");//id
            model.addColumn("Nombre");
            model.addColumn("Cantidad");
            model.addColumn("Precio");
            model.addColumn("descripcion");
            model.addColumn("Iva");
            model.addColumn("Categoria");
            model.addColumn("Plataforma");
            model.addColumn("Estado");

            while (rs.next()) {

                precio = rs.getDouble("precio");
                porcentajeIva = rs.getInt("porcentajeIva");

                Object fila[] = new Object[9];

                for (int i = 0; i < 9; i++) {

                    if (i == 5) {
                        System.out.println("precio: " + precio + " Iva: " + porcentajeIva);
                        this.calcularIva(precio, porcentajeIva);
                        System.out.println("PRECIOIVA: " + IVA);
                        fila[i] = IVA;
                        rs.getObject(i + 1);
                    } else {
                        fila[i] = rs.getObject(i + 1);
                    }

                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llamar la tabla videojuego: " + e);
        }

        jTable_Videojuego.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_Videojuego.rowAtPoint(e.getPoint());
                int columna_point = 0;
                if (fila_point > -1) {
                    idVideojuego = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosVideojuegoSeleccionado(idVideojuego);
                }
            }
        });
    }
    JFileChooser seleccionar = new JFileChooser();
    File archivo;

    //Carga masiva desde excel
    private void cargaMasiva() throws IOException {
        if (seleccionar.showDialog(null, "abrir") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionar.getSelectedFile();
            if (archivo.canRead()) {
                if (archivo.getName().endsWith("xlsx")) {
                    String path = archivo.getAbsolutePath();
                    Ctrl_Videojuego videojuego = new Ctrl_Videojuego();

                    videojuego.cargaMasiva(path);

                }
            }
        }
    }
    

}
