
package vista;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.SQLException;
import java.sql.ResultSet;
import conexion.Conexion;
import controlador.Ctrl_Videojuego;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import modelo.Videojuego;

/**
 *
 * @author USER
 */
public class InterVideojuego extends javax.swing.JInternalFrame {

    int obtenerIdCategoria = 0;
    int obtenerIdPlataforma = 0;
    
    public InterVideojuego() {
        initComponents();
        this.setSize(new Dimension(430, 350));
        this.setTitle("Nuevo Videojuego");
        
        this.CargarComboCategoria();
        this.CargarComboPlataforma();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        txt_cantidad = new javax.swing.JTextField();
        txt_precio = new javax.swing.JTextField();
        txt_descripcion = new javax.swing.JTextField();
        jComboBox_iva = new javax.swing.JComboBox<>();
        jComboBox_categoria = new javax.swing.JComboBox<>();
        jComboBox_plataforma = new javax.swing.JComboBox<>();
        jButton_guardar = new javax.swing.JButton();
        jLabel_walpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nuevo Videojuego");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Cantidad:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 80, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Precio:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 80, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Nombre:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 80, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Descripcion:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 90, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("IVA:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 90, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Categoria:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 90, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Plataforma:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 90, -1));

        txt_nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 210, -1));

        txt_cantidad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txt_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 210, -1));

        txt_precio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txt_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 210, -1));

        txt_descripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txt_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 210, -1));

        jComboBox_iva.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_iva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione IVA:", "No tiene IVA", "19%" }));
        getContentPane().add(jComboBox_iva, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 230, -1));

        jComboBox_categoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Categoria:", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jComboBox_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 230, -1));

        jComboBox_plataforma.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_plataforma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Plataforma:", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jComboBox_plataforma, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 230, -1));

        jButton_guardar.setBackground(new java.awt.Color(41, 128, 185));
        jButton_guardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_guardar.setForeground(new java.awt.Color(0, 0, 0));
        jButton_guardar.setText("Guardar");
        jButton_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_guardarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 120, 30));

        jLabel_walpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo4.jpg"))); // NOI18N
        getContentPane().add(jLabel_walpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_guardarActionPerformed
        Videojuego videojuego = new Videojuego();
        Ctrl_Videojuego controlVideojuego =new Ctrl_Videojuego();
        String iva = "";
        String categoria = "";
        String plataforma = "";
        iva = jComboBox_iva.getSelectedItem().toString().trim();
        categoria = jComboBox_categoria.getSelectedItem().toString().trim();
        plataforma = jComboBox_plataforma.getSelectedItem().toString().trim();
        
        //Validacion de campos
        if(txt_nombre.getText().isEmpty()||txt_cantidad.getText().isEmpty()
                ||txt_precio.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
            txt_nombre.setBackground(Color.red);
            txt_cantidad.setBackground(Color.red);
            txt_precio.setBackground(Color.red);
        }else{
            //consulta para verificar redundancia de informacion
            if(!controlVideojuego.verificacionExiste(txt_nombre.getText().trim(), txt_descripcion.getText().trim())){
                if(iva.equalsIgnoreCase("Seleccione IVA:")){
                    JOptionPane.showMessageDialog(null, "Seleccione IVA.");
                }else if(categoria.equalsIgnoreCase("Seleccione Categoria:")){
                    JOptionPane.showMessageDialog(null, "Seleccione Categoria.");
                }else if(plataforma.equalsIgnoreCase("Seleccione Plataforma:")){
                    JOptionPane.showMessageDialog(null, "Seleccione Plataforma");
                }else{
                    try {
                        
                        videojuego.setNombre(txt_nombre.getText().trim());
                        videojuego.setCantidad(Integer.parseInt(txt_cantidad.getText().trim()));
                        String precioTXT = "";
                        double Precio = 0.0;
                        precioTXT = txt_precio.getText().trim();
                        boolean aux = false;
                        
                        // si el usuario ingresa , (coma) como decimal se transforma en . (punto)
                        for(int i=0; i<precioTXT.length(); i++){
                            if( precioTXT.charAt(i) == ',' ){
                                String precioNuevo = precioTXT.replace(",", ".");
                                Precio = Double.parseDouble(precioNuevo);
                                aux = true;
                            }
                        }
                        
                        //evaluar la condicion
                        if(aux){
                            videojuego.setPrecio(Precio);
                        }else{
                            Precio = Double.parseDouble(precioTXT);
                            videojuego.setPrecio(Precio);
                        }
                        
                        videojuego.setDescripcion(txt_descripcion.getText().trim());
                        
                        //porcentage de iva
                        if(iva.equalsIgnoreCase("No tiene IVA")){
                            videojuego.setPorcentajeIva(0);
                        }else if(iva.equalsIgnoreCase("19%")){
                            videojuego.setPorcentajeIva(19);
                        }
                        
                        //idCategoria - metodo para obtener el id de la categoria
                        this.IdCategoria();
                        videojuego.setIdCategoria(obtenerIdCategoria);
                        
                        //idPlataforma - metodo para obtener el id de la plataforma
                        this.IdPlataforma();
                        videojuego.setIdPlataforma(obtenerIdPlataforma);
                        
                        videojuego.setEstado(1);
                        
                        if(controlVideojuego.guardar(videojuego)){
                            JOptionPane.showMessageDialog(null, "Videojuego guardado");
                            txt_nombre.setBackground(Color.white);
                            txt_cantidad.setBackground(Color.white);
                            txt_precio.setBackground(Color.white);
                            txt_descripcion.setBackground(Color.white);

                            this.CargarComboCategoria();
                            this.CargarComboPlataforma();
                            this.limpiar();
                        }else{
                            JOptionPane.showMessageDialog(null, "Error al Guardar el Videojuego");
                        }
                        
                    } catch (HeadlessException | NumberFormatException e) {
                        System.out.println("Error en: "+e);
                    }
                }
            }else{
                JOptionPane.showMessageDialog(null, "El Videojuego ya se encuentra registrado");
            }
        }
    }//GEN-LAST:event_jButton_guardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_guardar;
    private javax.swing.JComboBox<String> jComboBox_categoria;
    private javax.swing.JComboBox<String> jComboBox_iva;
    private javax.swing.JComboBox<String> jComboBox_plataforma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_walpaper;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_descripcion;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_precio;
    // End of variables declaration//GEN-END:variables

    private void limpiar(){
        txt_nombre.setText("");
        txt_cantidad.setText("");
        txt_precio.setText("");
        txt_descripcion.setText("");
        jComboBox_iva.setSelectedItem("Seleccione IVA:");
    }

    //Metodo para cargar las categorias
    private void CargarComboCategoria(){
        Connection cn = (Connection) Conexion.conectar();
        String sql = "select * from tb_categoria where estado=1";
        Statement st;
        
        try {
            st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_categoria.removeAllItems();
            jComboBox_categoria.addItem("Seleccione Categoria:");
            while(rs.next()){
                jComboBox_categoria.addItem(rs.getString("descripcion"));
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("Error al Cargar categorias: "+e);
        }
    }
    
    //Metodo para cargar las Plataformas
    private void CargarComboPlataforma(){
        Connection cn = (Connection) Conexion.conectar();
        String sql = "select * from tb_plataforma where estado=1";
        Statement st;
        
        try {
            st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_plataforma.removeAllItems();
            jComboBox_plataforma.addItem("Seleccione Plataforma:");
            while(rs.next()){
                jComboBox_plataforma.addItem(rs.getString("descripcion"));
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("Error al Cargar las Plataformas: "+e);
        }
    }
    
    //Metodo para obtener el id categoria
    
    private int IdCategoria(){
        String sql = "select * from tb_categoria where descripcion = '"+this.jComboBox_categoria.getSelectedItem()+"';";
        Statement st;
        try {
            Connection cn = (Connection) Conexion.conectar();
            st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                obtenerIdCategoria = rs.getInt("idCategoria");
            }
        } catch (SQLException e) {
            System.out.println("Error al obtener id Categoria");
        }
        return obtenerIdCategoria;
    }
    
    private int IdPlataforma(){
        String sql = "select * from tb_plataforma where descripcion = '"+this.jComboBox_plataforma.getSelectedItem()+"';";
        Statement st;
        try {
            Connection cn = (Connection) Conexion.conectar();
            st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                obtenerIdPlataforma = rs.getInt("idPlataforma");
            }
        } catch (SQLException e) {
            System.out.println("Error al obtener id Plataforma");
        }
        return obtenerIdPlataforma;
    }

}
